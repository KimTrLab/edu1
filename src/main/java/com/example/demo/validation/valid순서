HTTP 요청 수신

	클라이언트에서 POST /users 요청 → JSON body 전송

DispatcherServlet 매핑

	요청 URL → 해당 컨트롤러 메서드 매핑
	JSON body → @RequestBody로 변환 → DTO 객체 생성

@Valid 검증

	Spring MVC가 Validator를 호출
	DTO 필드에 설정된 Bean Validation 애너테이션(@NotBlank, @Size 등) 검사
	유효성 통과 → 다음 단계 진행
	유효성 실패 → MethodArgumentNotValidException 발생 → @ControllerAdvice에서 처리 가능
	여기서 이미 예외 발생 시 Service / Repository 호출은 아예 실행되지 않음

Controller 메서드 실행

	DTO 유효성 통과 → 컨트롤러 메서드 본문 실행
	userService.save(request) 호출

Service에서 CRUD 수행

	비즈니스 로직 처리
	userRepository.save(entity) → JPA Repository 호출

Repository → DB

	JPA → Hibernate → JDBC → DB로 SQL 실행
	이때 DB 제약 조건 위반 (UNIQUE, CHECK 등) 발생하면 예외 발생
		Spring JPA에서는 DataIntegrityViolationException으로 래핑
		예외 발생 시 Service/Controller로 전달 → ControllerAdvice에서 처리 가능

Controller 응답

	예외 없으면 정상 ResponseEntity 반환
	예외 발생 시 @ControllerAdvice에서 잡아 JSON 메시지로 클라이언트 반환